{"version":3,"sources":["services/directory.js","component/Help/index.js","component/Ls/index.js","services/commands.js","scenes/cmd/index.js","services/cmdTools.js","App.js","serviceWorker.js","index.js"],"names":["tree","root","name","dirs","desc","files","link","addInfo","base","forEach","f","file","d","dir","currentDir","getDirectory","cdone","path","cdir","parent","findparent","child","some","i","length","newDir","find","getPath","allowFile","split","tmpDir","Help","props","commands","className","map","cmd","key","Ls","expanded","getDirSpan","onClick","getFileSpan","href","target","rel","info","defaultProps","fct","_","__","addToStack","error","cd","includes","unique","CMD","getCarpetClassName","state","isFocus","typing","special","cl","inputOnChange","e","setState","input","value","typingTimeout","clearTimeout","setTimeout","element","Promise","res","stack","console","log","finalElement","getPrompt","executeCmd","c","getCmdError","cmdName","args","handleCmd","a","preventDefault","oldPrompt","this","inputRef","focus","onBlur","onSubmit","ref","inputClassName","onChange","React","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3e7be8ac.chunk.js","sourcesContent":["const tree = {\n  root: {\n    name: '~',\n    dirs: [\n      {\n        name: 'projects',\n        desc: 'personal projects and the ones I\\'m contributing',\n        files: [\n          { name: 'portfolio', desc: 'this website', link: 'https://noerls.com' },\n        ],\n      },\n      {\n        name: 'skills',\n        desc: 'language and technology that I\\'m mastering',\n      },\n      {\n        name: 'experiances',\n        desc: 'professional experiances',\n      },\n      {\n        name: 'formation',\n        desc: 'diplomas and certifications',\n      },\n      {\n        name: 'me',\n        desc: 'learn more about me',\n      },\n      {\n        name: 'contacts',\n        desc: 'my github, my mail and all you need to contact me',\n      },\n    ],\n  },\n};\n\nfunction addInfo(base) {\n  const { files, dirs } = base;\n  if (files) files.forEach(f => { f.file = true; });\n  if (dirs) {\n    dirs.forEach(d => { d.dir = true; addInfo(d); });\n  }\n}\naddInfo(tree.root);\n\n\nlet currentDir = tree.root;\n\nfunction findparent(base, child) {\n  if (!base.dirs) return null;\n  if (base.dirs.some(dir => dir === child)) return base;\n  // eslint-disable-next-line\n  for (let i = 0; i < base.dirs.length; i++) {\n    const parent = findparent(base.dirs[i]);\n    if (parent) return parent;\n  }\n  return null;\n}\n\nconst getDirectory = () => currentDir;\nconst setDirectory = (dir) => { currentDir = dir; };\n\nfunction cdone(path, cdir) {\n  if (path === '.') return cdir;\n  if (path === '..') {\n    const parent = findparent(tree.root, cdir);\n    if (!parent) return cdir;\n    return parent;\n  }\n  if (!cdir.dirs) return null;\n  const newDir = cdir.dirs.find(d => d.name === path);\n  if (!newDir) return null;\n  return newDir;\n}\n\nfunction getPath(path, allowFile) {\n  if (!path) return currentDir;\n  path = path.split('/');\n  let tmpDir = currentDir;\n  for (let i = 0; i < path.length; i += 1) {\n    tmpDir = cdone(path[i], tmpDir);\n    if (!tmpDir) {\n      if (path[i].files && allowFile) {\n        return path[i].files.find(f => f.name === path[i]);\n      }\n      return null;\n    }\n  }\n  return tmpDir;\n}\n\nfunction cd(dir) {\n  if (!dir) {\n    currentDir = tree.root;\n    return null;\n  }\n  const newDir = getPath(dir, false);\n  if (!newDir) return `Invalid directory '${dir}'`;\n  currentDir = newDir;\n  return null;\n}\n\nexport {\n  cd, getDirectory, getPath, setDirectory,\n};\n","import React from 'react';\nimport './index.css';\n\nconst Help = (props) => {\n  const { commands } = props;\n  return (\n    <div className=\"container\">\n      <div className=\"sub-container name-container\">\n        {commands.map(cmd => (\n          <div key={cmd.name}>\n            <span>\n              {cmd.name}\n              &nbsp;-&nbsp;\n            </span>\n          </div>\n        ))}\n      </div>\n      <div className=\"sub-container\">\n        {commands.map(cmd => (\n          <div key={cmd.name}>\n            <span>\n              {cmd.desc}\n            </span>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Help;\n","/* eslint-disable jsx-a11y/no-static-element-interactions */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\nimport React from 'react';\nimport './index.css';\nimport { setDirectory } from '../../services/directory';\n\nconst Ls = (props) => {\n  const { files, dirs, expanded } = props;\n\n  const getDirSpan = (d) => (\n    <span\n      onClick={() => setDirectory(d)}\n      className=\"content dir\"\n      key={d.name}\n    >\n      {d.name}\n    </span>\n  );\n\n  const getFileSpan = (f) => {\n    if (f.link) {\n      return (\n        <a className=\"content file link\" key={f.name} href={f.link} target=\"_blank\" rel=\"noopener noreferrer\">\n          {f.name}\n        </a>\n      );\n    }\n    return (\n      <span className=\"content file\" key={f.name}>\n        {f.name}\n      </span>\n    );\n  };\n\n  return (\n    <div>\n      {expanded ? (\n        <div className=\"container\">\n          <div>\n            {[...dirs, ...files].map(info => (\n              <div\n                className=\"sub-container\"\n                key={info.name}\n              >\n                <div className=\"title\">\n                  {info.file ? getFileSpan(info) : getDirSpan(info)}\n                </div>\n              </div>\n            ))}\n          </div>\n          <div>\n            {[...dirs, ...files].map(info => (\n              <div\n                className=\"sub-container\"\n                key={info.name}\n              >\n                <div className=\"desc\">\n                  {info.desc}\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      ) : (\n          <div>\n            {dirs.map(d => getDirSpan(d))}\n            {files.map(f => getFileSpan(f))}\n          </div>\n        )}\n    </div>\n  );\n};\n\nLs.defaultProps = {\n  dirs: [],\n  files: [],\n  expanded: false,\n};\n\nexport default Ls;\n","import React from 'react';\nimport { getPath, cd } from './directory';\nimport Help from '../component/Help';\nimport Ls from '../component/Ls';\n\n// (dir, cmd, addToStack)\n\nconst ls = (dir, cmd, addToStack) => {\n  const path = cmd && cmd.length > 0 && cmd[cmd.length - 1][0] !== '-' ? cmd[cmd.length - 1] : null;\n  const info = getPath(path, true);\n  if (!info) {\n    addToStack(<span>{`Invalid path '${path}'`}</span>);\n    return;\n  }\n  let expanded = false;\n  if (cmd.length > 0 && cmd[0][0] === '-' && cmd[0].includes('l')) expanded = true;\n  let files = [];\n  let dirs = [];\n  if (info.file) {\n    files = [info];\n  } else {\n    dirs = info.dirs;\n    files = info.files;\n  }\n  addToStack(<Ls files={files} dirs={dirs} expanded={expanded} />);\n};\n\nconst commands = [\n  {\n    name: 'help',\n    desc: 'show help',\n    fct: (_, __, addToStack) => {\n      addToStack(<Help commands={commands} />);\n    },\n  },\n  {\n    name: 'cd',\n    desc: 'change the working directory - \\'cd $folder\\'',\n    fct: (_, cmd, addToStack) => {\n      const error = cd(cmd && cmd[0]);\n      if (error) addToStack(<span>{error}</span>);\n    },\n  },\n  {\n    name: 'ls',\n    desc: 'list files / project',\n    fct: ls,\n  },\n];\n\nexport default commands;\n","/* eslint-disable jsx-a11y/no-static-element-interactions */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\nimport React from 'react';\nimport './index.css';\nimport AutosizeInput from 'react-input-autosize';\nimport cl from 'classnames';\nimport { getDirectory } from '../../services/directory';\nimport { getCmdError } from '../../services/cmdTools';\nimport commands from '../../services/commands';\n\nlet unique = 0;\n\nclass CMD extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      input: '',\n      isFocus: false,\n      typing: false,\n      stack: [],\n    };\n  }\n\n  getCarpetClassName = () => {\n    const { isFocus, typing } = this.state;\n    let special = '';\n    if (isFocus) {\n      special = typing ? 'input-carret-focus-typing' : 'input-carret-focus-ide';\n    } else {\n      special = 'input-carret-blur';\n    }\n    return cl(special, 'input-carret');\n  }\n\n  inputOnChange = e => {\n    this.setState({ input: e.target.value, typing: true });\n    if (this.typingTimeout) clearTimeout(this.typingTimeout);\n    this.typingTimeout = setTimeout(() => this.setState({ typing: false }), 1000);\n  }\n\n  addToStack = (element) => new Promise((res) => {\n    const { stack } = this.state;\n    unique += 1;\n    console.log(`adding to stack - unique ${unique}`);\n    const finalElement = (\n      <div className=\"cmd-content\" key={unique}>\n        {element}\n      </div>\n    );\n    this.setState({ stack: [finalElement, ...stack] }, res);\n  });\n\n  getPrompt = () => `[noe@noe-pc ${getDirectory().name}]$`;\n\n  executeCmd = (cmd) => {\n    const error = getCmdError(cmd);\n    if (error) {\n      this.addToStack(<span>{error}</span>);\n      return;\n    }\n    const [cmdName, ...args] = cmd.split(' ');\n    const info = commands.find(c => c.name === cmdName);\n    info.fct(getDirectory(), args, this.addToStack);\n  }\n\n  handleCmd = async e => {\n    e.preventDefault();\n    const oldPrompt = this.getPrompt();\n    const { input } = this.state;\n    this.setState({ input: '' });\n    await this.addToStack((\n      <div>\n        {oldPrompt}\n        &nbsp;\n        {input}\n      </div>\n    ));\n    if (!input || input.length === 0) return;\n    await this.executeCmd(input);\n    this.setState({ input: '' });\n  }\n\n  render() {\n    const { input, stack } = this.state;\n    return (\n      <div\n        className=\"background\"\n      >\n        <div className=\"cmd-container cmd\">\n          <div className=\"cmd-top-container\">\n            <span className=\"box\" />\n            <span className=\"box\">\n              Noe Rivals\n            </span>\n            <span className=\"box\">\n              <span className=\"cmd-button cmd-button-red\" />\n              <span className=\"cmd-button cmd-button-orange\" />\n              <span className=\"cmd-button cmd-button-green\" />\n            </span>\n          </div>\n          <div\n            className=\"cmd-content-container\"\n            onClick={async () => { this.inputRef.focus(); this.setState({ isFocus: true }); }}\n            onBlur={async () => { this.setState({ isFocus: false }); }}\n          >\n            <div className=\"cmd-content cmd-content-first\">\n              {this.getPrompt()}\n              &nbsp;\n              <form onSubmit={this.handleCmd} className=\"input-form\">\n                <AutosizeInput\n                  ref={ref => { this.inputRef = ref; }}\n                  inputClassName=\"cmd-input\"\n                  onChange={this.inputOnChange}\n                  value={input}\n                />\n                <span className={this.getCarpetClassName()} />\n              </form>\n            </div>\n            {stack}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default CMD;\n","import commands from './commands';\n\nfunction getCmdError(cmd) {\n  if (!cmd || cmd.length === 0) return 'empty command';\n  cmd = cmd.split(' ');\n  const commandInfo = commands.find(c => c.name === cmd[0]);\n  if (!commandInfo) return `'${cmd[0]}': unknown command`;\n  return null;\n}\n\nexport { getCmdError };\n","import React from 'react';\nimport CMD from './scenes/cmd';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <CMD />\n    </div>\n  );\n}\n\nexport default App;\n","/* eslint-disable */\n\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","/* eslint-disable no-undef */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}